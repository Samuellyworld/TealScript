#pragma version 10
intcblock 1 0
bytecblock 0x766f746573496e4661766f7572 0x766f746573546f74616c 0x151f7c75 0x70726f706f73616c

// This TEAL was generated by TEALScript v0.105.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// createApplication(string)void
*abi_route_createApplication:
	// proposal: string
	txna ApplicationArgs 1
	extract 2 0

	// execute createApplication(string)void
	callsub createApplication
	intc 0 // 1
	return

// createApplication(proposal: string): void
createApplication:
	proto 1 0

	// contracts/dao.algo.ts:19
	// this.proposal.value = proposal
	bytec 3 //  "proposal"
	frame_dig -1 // proposal: string
	dup
	len
	itob
	extract 6 2
	swap
	concat
	app_global_put
	retsub

// bootstrap()uint64
*abi_route_bootstrap:
	// The ABI return prefix
	bytec 2 // 0x151f7c75

	// execute bootstrap()uint64
	callsub bootstrap
	itob
	concat
	log
	intc 0 // 1
	return

// bootstrap(): AssetID
bootstrap:
	proto 0 1

	// Push empty bytes after the frame pointer to reserve space for local variables
	pushbytes 0x

	// contracts/dao.algo.ts:24
	// registeredASA = sendAssetCreation({
	//       configAssetTotal: 1_000,
	//       configAssetFreeze: this.app.address
	//     })
	itxn_begin
	pushint 3 // acfg
	itxn_field TypeEnum

	// contracts/dao.algo.ts:25
	// configAssetTotal: 1_000
	pushint 1_000
	itxn_field ConfigAssetTotal

	// contracts/dao.algo.ts:26
	// configAssetFreeze: this.app.address
	global CurrentApplicationAddress
	itxn_field ConfigAssetFreeze

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	itxn CreatedAssetID
	frame_bury 0 // registeredASA: uint64

	// contracts/dao.algo.ts:29
	// return registeredASA
	frame_dig 0 // registeredASA: uint64

	// set the subroutine return value
	frame_bury 0
	retsub

// vote(bool)void
*abi_route_vote:
	// inFavour: bool
	txna ApplicationArgs 1
	dup
	len
	intc 0 // 1
	==

	// argument 0 (inFavour) for vote must be a bool
	assert
	intc 1 // 0
	getbit

	// execute vote(bool)void
	callsub vote
	intc 0 // 1
	return

// vote(inFavour : boolean): void
vote:
	proto 1 0

	// contracts/dao.algo.ts:34
	// this.votesTotal.value =  this.votesTotal.value + 1
	bytec 1 //  "votesTotal"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put

	// *if0_condition
	// contracts/dao.algo.ts:35
	// inFavour
	frame_dig -1 // inFavour: boolean
	bz *if0_end

	// *if0_consequent
	// contracts/dao.algo.ts:36
	// this.votesInFavour.value = this.votesInFavour.value + 1
	bytec 0 //  "votesInFavour"
	dup
	app_global_get
	intc 0 // 1
	+
	app_global_put

*if0_end:
	retsub

// getProposal()string
*abi_route_getProposal:
	// The ABI return prefix
	bytec 2 // 0x151f7c75

	// execute getProposal()string
	callsub getProposal
	dup
	len
	itob
	extract 6 2
	swap
	concat
	concat
	log
	intc 0 // 1
	return

// getProposal(): string
getProposal:
	proto 0 1

	// contracts/dao.algo.ts:42
	// return this.proposal.value;
	bytec 3 //  "proposal"
	app_global_get
	extract 2 0
	retsub

// getVotes()(uint64,uint64)
*abi_route_getVotes:
	// The ABI return prefix
	bytec 2 // 0x151f7c75

	// execute getVotes()(uint64,uint64)
	callsub getVotes
	concat
	log
	intc 0 // 1
	return

// getVotes(): [uint64, uint64]
getVotes:
	proto 0 1

	// contracts/dao.algo.ts:47
	// return [this.votesInFavour.value, this.votesTotal.value];
	bytec 0 //  "votesInFavour"
	app_global_get
	itob
	bytec 1 //  "votesTotal"
	app_global_get
	itob
	concat
	retsub

*create_NoOp:
	pushbytes 0x115756db // method "createApplication(string)void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x786b6291 // method "bootstrap()uint64"
	pushbytes 0xd90cd494 // method "vote(bool)void"
	pushbytes 0x2c70340b // method "getProposal()string"
	pushbytes 0xc1df3501 // method "getVotes()(uint64,uint64)"
	txna ApplicationArgs 0
	match *abi_route_bootstrap *abi_route_vote *abi_route_getProposal *abi_route_getVotes

	// this contract does not implement the given ABI method for call NoOp
	err